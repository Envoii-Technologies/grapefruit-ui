{"version":3,"file":"testuser-d7e4c479.js","sources":["../../src/components/Avatar/Avatar.jsx","../../src/assets/testuser.png"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Avatar.scss';\n\nexport const Avatar = ({ className, name, image, size, ...props }) => {\n    const [imageError, setImageError] = useState(false);\n\n    const getFirstLetters = (str) => {\n        const firstLetters = str\n            .split(' ')\n            .map((word) => word[0])\n            .join('');\n\n        return firstLetters;\n    };\n\n    return (\n        <div\n            className={`\n\t\t\tAvatar ${className !== undefined ? className : ''}\n\t\t\t${size === 'small' ? 'small' : size === 'medium' ? 'medium' : 'large'}\n\t\t\t${image !== undefined && imageError === false ? 'with-image' : ''}\n\t\t\t`}\n        >\n            {image ? (\n                <>\n                    <img\n                        className=\"Avatar__image\"\n                        src={image}\n                        alt=\"user-image\"\n                        onError={() => setImageError(true)}\n                        style={{ display: imageError ? 'none' : 'flex' }}\n                    />\n                    {imageError && (\n                        <h1 className=\"Avatar__name\">\n                            {getFirstLetters(name)}\n                        </h1>\n                    )}\n                </>\n            ) : (\n                <h1 className=\"Avatar__name\">{getFirstLetters(name)}</h1>\n            )}\n        </div>\n    );\n};\n\nAvatar.propTypes = {\n    /**\n     * Custom class name of Component\n     */\n    className: PropTypes.string,\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    /**\n     * Initials shown in Avatar\n     */\n    name: PropTypes.string,\n    /**\n     * Path to image file\n     */\n    image: PropTypes.string,\n};\n\nAvatar.defaultProps = {\n    className: undefined,\n    size: 'medium',\n    name: 'Jane Doe',\n    image: undefined,\n};\n","export default \"__VITE_ASSET__c56b83c7__\""],"names":["cov_v6o9mlx40","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","Avatar","className","name","image","size","props","f","imageError","setImageError","useState","getFirstLetters","str","firstLetters","split","map","word","join","jsx","b","children","jsxs","Fragment","src","alt","onError","style","display","propTypes","PropTypes","string","oneOf","userImage"],"mappings":"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"}